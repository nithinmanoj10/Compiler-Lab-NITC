#!/bin/zsh
clear

cd ./Frontend

yacc -d -v -t ast.y
lex ast.l
gcc y.tab.c lex.yy.c ast.c ../Backend/codegen.c ../Data_Structures/ParamStruct.c ../Data_Structures/loopStack.c ../Data_Structures/typeTable.c ../Data_Structures/GSTable.c ../Functions/reg.c ../Functions/label.c ../Functions/xsm_syscalls.c ../Functions/xsm_library.c ../Functions/stackMemory.c ../Functions/stringMan.c ../Functions/typeCheck.c -g -o ast
# clear

echo "‚è≥ Compiling $1"
printf '%.s‚îÄ' $(seq 1 $(tput cols))
printf "\n"

cat -n ../Input_Files/5/$1
printf "\n"
printf '%.s‚îÄ' $(seq 1 $(tput cols))

./ast $1 < ../Input_Files/5/$1

# echo "Program returned: $?"

if [ $? -eq 0 ]
then

	cd ../Backend

	lex labelTranslator.l
  	gcc lex.yy.c ../Functions/label.c  -g -o labelTranslator
  	./labelTranslator

	echo "\nüöÄ Running target.xsm\n"

	cd ../../..
	./xsm -l library.lib -e Stages/4/Target_Files/target.xsm $2
fi
