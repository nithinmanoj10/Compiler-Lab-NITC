Terminals unused in grammar

    RETURN


Grammar

    0 $accept: start $end

    1 start: GDeclBlock BEGIN_ Slist END SEMICOLON
    2      | BEGIN_ END SEMICOLON

    3 Slist: Slist Stmt SEMICOLON
    4      | Stmt SEMICOLON

    5 Stmt: inputStmt
    6     | outputStmt
    7     | assignStmt
    8     | ifStmt
    9     | whileStmt
   10     | doWhileStmt
   11     | breakStmt
   12     | continueStmt
   13     | breakPointStmt

   14 inputStmt: READ expr

   15 outputStmt: WRITE expr

   16 assignStmt: ID EQUAL expr
   17           | ID '[' expr ']' EQUAL expr

   18 ifStmt: IF expr THEN Slist ELSE Slist ENDIF
   19       | IF expr THEN Slist ENDIF

   20 whileStmt: WHILE expr DO Slist ENDWHILE

   21 doWhileStmt: DO Slist WHILE expr ENDWHILE

   22 breakStmt: BREAK

   23 continueStmt: CONTINUE

   24 breakPointStmt: BREAKPOINT

   25 GDeclBlock: DECL GDeclList ENDDECL
   26           | DECL ENDDECL

   27 GDeclList: GDeclList GDecl
   28          | GDecl

   29 GDecl: Type GIDList SEMICOLON

   30 Type: INT
   31     | STR

   32 GIDList: GIDList COMMA GID
   33        | GID

   34 GID: ID
   35    | ID '[' NUM ']'
   36    | MUL ID

   37 expr: expr PLUS expr
   38     | expr MINUS expr
   39     | expr MUL expr
   40     | expr DIV expr
   41     | expr MOD expr
   42     | AMPERSAND expr
   43     | MUL expr
   44     | expr EQ expr
   45     | expr NEQ expr
   46     | expr LT expr
   47     | expr LTE expr
   48     | expr GT expr
   49     | expr GTE expr
   50     | '(' expr ')'
   51     | ID '[' expr ']'
   52     | ID '(' ')'
   53     | ID
   54     | NUM
   55     | STRING


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 50 52
    ')' (41) 50 52
    '[' (91) 17 35 51
    ']' (93) 17 35 51
    error (256)
    BEGIN_ (258) 1 2
    END (259) 1 2
    READ (260) 14
    WRITE (261) 15
    ID <node> (262) 16 17 34 35 36 51 52 53
    NUM <node> (263) 35 54
    STRING <node> (264) 55
    PLUS (265) 37
    MINUS (266) 38
    MUL (267) 36 39 43
    DIV (268) 40
    MOD (269) 41
    AMPERSAND (270) 42
    EQUAL (271) 16 17
    BREAKPOINT (272) 24
    IF (273) 18 19
    THEN (274) 18 19
    ELSE (275) 18
    ENDIF (276) 18 19
    WHILE (277) 20 21
    DO (278) 20 21
    ENDWHILE (279) 20 21
    BREAK (280) 22
    CONTINUE (281) 23
    DECL (282) 25 26
    ENDDECL (283) 25 26
    INT (284) 30
    STR (285) 31
    RETURN (286)
    SEMICOLON (287) 1 2 3 4 29
    COMMA (288) 32
    EQ (289) 44
    NEQ (290) 45
    LT (291) 46
    LTE (292) 47
    GT (293) 48
    GTE (294) 49


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    start <node> (45)
        on left: 1 2
        on right: 0
    Slist <node> (46)
        on left: 3 4
        on right: 1 3 18 19 20 21
    Stmt <node> (47)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 3 4
    inputStmt <node> (48)
        on left: 14
        on right: 5
    outputStmt <node> (49)
        on left: 15
        on right: 6
    assignStmt <node> (50)
        on left: 16 17
        on right: 7
    ifStmt <node> (51)
        on left: 18 19
        on right: 8
    whileStmt <node> (52)
        on left: 20
        on right: 9
    doWhileStmt <node> (53)
        on left: 21
        on right: 10
    breakStmt <node> (54)
        on left: 22
        on right: 11
    continueStmt <node> (55)
        on left: 23
        on right: 12
    breakPointStmt <node> (56)
        on left: 24
        on right: 13
    GDeclBlock (57)
        on left: 25 26
        on right: 1
    GDeclList (58)
        on left: 27 28
        on right: 25 27
    GDecl (59)
        on left: 29
        on right: 27 28
    Type (60)
        on left: 30 31
        on right: 29
    GIDList (61)
        on left: 32 33
        on right: 29 32
    GID (62)
        on left: 34 35 36
        on right: 32 33
    expr <node> (63)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 14 15 16 17 18 19 20 21 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51


State 0

    0 $accept: . start $end

    BEGIN_  shift, and go to state 1
    DECL    shift, and go to state 2

    start       go to state 3
    GDeclBlock  go to state 4


State 1

    2 start: BEGIN_ . END SEMICOLON

    END  shift, and go to state 5


State 2

   25 GDeclBlock: DECL . GDeclList ENDDECL
   26           | DECL . ENDDECL

    ENDDECL  shift, and go to state 6
    INT      shift, and go to state 7
    STR      shift, and go to state 8

    GDeclList  go to state 9
    GDecl      go to state 10
    Type       go to state 11


State 3

    0 $accept: start . $end

    $end  shift, and go to state 12


State 4

    1 start: GDeclBlock . BEGIN_ Slist END SEMICOLON

    BEGIN_  shift, and go to state 13


State 5

    2 start: BEGIN_ END . SEMICOLON

    SEMICOLON  shift, and go to state 14


State 6

   26 GDeclBlock: DECL ENDDECL .

    $default  reduce using rule 26 (GDeclBlock)


State 7

   30 Type: INT .

    $default  reduce using rule 30 (Type)


State 8

   31 Type: STR .

    $default  reduce using rule 31 (Type)


State 9

   25 GDeclBlock: DECL GDeclList . ENDDECL
   27 GDeclList: GDeclList . GDecl

    ENDDECL  shift, and go to state 15
    INT      shift, and go to state 7
    STR      shift, and go to state 8

    GDecl  go to state 16
    Type   go to state 11


State 10

   28 GDeclList: GDecl .

    $default  reduce using rule 28 (GDeclList)


State 11

   29 GDecl: Type . GIDList SEMICOLON

    ID   shift, and go to state 17
    MUL  shift, and go to state 18

    GIDList  go to state 19
    GID      go to state 20


State 12

    0 $accept: start $end .

    $default  accept


State 13

    1 start: GDeclBlock BEGIN_ . Slist END SEMICOLON

    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    ID          shift, and go to state 23
    BREAKPOINT  shift, and go to state 24
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    BREAK       shift, and go to state 28
    CONTINUE    shift, and go to state 29

    Slist           go to state 30
    Stmt            go to state 31
    inputStmt       go to state 32
    outputStmt      go to state 33
    assignStmt      go to state 34
    ifStmt          go to state 35
    whileStmt       go to state 36
    doWhileStmt     go to state 37
    breakStmt       go to state 38
    continueStmt    go to state 39
    breakPointStmt  go to state 40


State 14

    2 start: BEGIN_ END SEMICOLON .

    $default  reduce using rule 2 (start)


State 15

   25 GDeclBlock: DECL GDeclList ENDDECL .

    $default  reduce using rule 25 (GDeclBlock)


State 16

   27 GDeclList: GDeclList GDecl .

    $default  reduce using rule 27 (GDeclList)


State 17

   34 GID: ID .
   35    | ID . '[' NUM ']'

    '['  shift, and go to state 41

    $default  reduce using rule 34 (GID)


State 18

   36 GID: MUL . ID

    ID  shift, and go to state 42


State 19

   29 GDecl: Type GIDList . SEMICOLON
   32 GIDList: GIDList . COMMA GID

    SEMICOLON  shift, and go to state 43
    COMMA      shift, and go to state 44


State 20

   33 GIDList: GID .

    $default  reduce using rule 33 (GIDList)


State 21

   14 inputStmt: READ . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 51


State 22

   15 outputStmt: WRITE . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 52


State 23

   16 assignStmt: ID . EQUAL expr
   17           | ID . '[' expr ']' EQUAL expr

    EQUAL  shift, and go to state 53
    '['    shift, and go to state 54


State 24

   24 breakPointStmt: BREAKPOINT .

    $default  reduce using rule 24 (breakPointStmt)


State 25

   18 ifStmt: IF . expr THEN Slist ELSE Slist ENDIF
   19       | IF . expr THEN Slist ENDIF

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 55


State 26

   20 whileStmt: WHILE . expr DO Slist ENDWHILE

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 56


State 27

   21 doWhileStmt: DO . Slist WHILE expr ENDWHILE

    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    ID          shift, and go to state 23
    BREAKPOINT  shift, and go to state 24
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    BREAK       shift, and go to state 28
    CONTINUE    shift, and go to state 29

    Slist           go to state 57
    Stmt            go to state 31
    inputStmt       go to state 32
    outputStmt      go to state 33
    assignStmt      go to state 34
    ifStmt          go to state 35
    whileStmt       go to state 36
    doWhileStmt     go to state 37
    breakStmt       go to state 38
    continueStmt    go to state 39
    breakPointStmt  go to state 40


State 28

   22 breakStmt: BREAK .

    $default  reduce using rule 22 (breakStmt)


State 29

   23 continueStmt: CONTINUE .

    $default  reduce using rule 23 (continueStmt)


State 30

    1 start: GDeclBlock BEGIN_ Slist . END SEMICOLON
    3 Slist: Slist . Stmt SEMICOLON

    END         shift, and go to state 58
    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    ID          shift, and go to state 23
    BREAKPOINT  shift, and go to state 24
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    BREAK       shift, and go to state 28
    CONTINUE    shift, and go to state 29

    Stmt            go to state 59
    inputStmt       go to state 32
    outputStmt      go to state 33
    assignStmt      go to state 34
    ifStmt          go to state 35
    whileStmt       go to state 36
    doWhileStmt     go to state 37
    breakStmt       go to state 38
    continueStmt    go to state 39
    breakPointStmt  go to state 40


State 31

    4 Slist: Stmt . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 32

    5 Stmt: inputStmt .

    $default  reduce using rule 5 (Stmt)


State 33

    6 Stmt: outputStmt .

    $default  reduce using rule 6 (Stmt)


State 34

    7 Stmt: assignStmt .

    $default  reduce using rule 7 (Stmt)


State 35

    8 Stmt: ifStmt .

    $default  reduce using rule 8 (Stmt)


State 36

    9 Stmt: whileStmt .

    $default  reduce using rule 9 (Stmt)


State 37

   10 Stmt: doWhileStmt .

    $default  reduce using rule 10 (Stmt)


State 38

   11 Stmt: breakStmt .

    $default  reduce using rule 11 (Stmt)


State 39

   12 Stmt: continueStmt .

    $default  reduce using rule 12 (Stmt)


State 40

   13 Stmt: breakPointStmt .

    $default  reduce using rule 13 (Stmt)


State 41

   35 GID: ID '[' . NUM ']'

    NUM  shift, and go to state 61


State 42

   36 GID: MUL ID .

    $default  reduce using rule 36 (GID)


State 43

   29 GDecl: Type GIDList SEMICOLON .

    $default  reduce using rule 29 (GDecl)


State 44

   32 GIDList: GIDList COMMA . GID

    ID   shift, and go to state 17
    MUL  shift, and go to state 18

    GID  go to state 62


State 45

   51 expr: ID . '[' expr ']'
   52     | ID . '(' ')'
   53     | ID .

    '['  shift, and go to state 63
    '('  shift, and go to state 64

    $default  reduce using rule 53 (expr)


State 46

   54 expr: NUM .

    $default  reduce using rule 54 (expr)


State 47

   55 expr: STRING .

    $default  reduce using rule 55 (expr)


State 48

   43 expr: MUL . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 65


State 49

   42 expr: AMPERSAND . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 66


State 50

   50 expr: '(' . expr ')'

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 67


State 51

   14 inputStmt: READ expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    EQ     shift, and go to state 73
    NEQ    shift, and go to state 74
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78

    $default  reduce using rule 14 (inputStmt)


State 52

   15 outputStmt: WRITE expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    EQ     shift, and go to state 73
    NEQ    shift, and go to state 74
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78

    $default  reduce using rule 15 (outputStmt)


State 53

   16 assignStmt: ID EQUAL . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 79


State 54

   17 assignStmt: ID '[' . expr ']' EQUAL expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 80


State 55

   18 ifStmt: IF expr . THEN Slist ELSE Slist ENDIF
   19       | IF expr . THEN Slist ENDIF
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    THEN   shift, and go to state 81
    EQ     shift, and go to state 73
    NEQ    shift, and go to state 74
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78


State 56

   20 whileStmt: WHILE expr . DO Slist ENDWHILE
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    DO     shift, and go to state 82
    EQ     shift, and go to state 73
    NEQ    shift, and go to state 74
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78


State 57

    3 Slist: Slist . Stmt SEMICOLON
   21 doWhileStmt: DO Slist . WHILE expr ENDWHILE

    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    ID          shift, and go to state 23
    BREAKPOINT  shift, and go to state 24
    IF          shift, and go to state 25
    WHILE       shift, and go to state 83
    DO          shift, and go to state 27
    BREAK       shift, and go to state 28
    CONTINUE    shift, and go to state 29

    Stmt            go to state 59
    inputStmt       go to state 32
    outputStmt      go to state 33
    assignStmt      go to state 34
    ifStmt          go to state 35
    whileStmt       go to state 36
    doWhileStmt     go to state 37
    breakStmt       go to state 38
    continueStmt    go to state 39
    breakPointStmt  go to state 40


State 58

    1 start: GDeclBlock BEGIN_ Slist END . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 59

    3 Slist: Slist Stmt . SEMICOLON

    SEMICOLON  shift, and go to state 85


State 60

    4 Slist: Stmt SEMICOLON .

    $default  reduce using rule 4 (Slist)


State 61

   35 GID: ID '[' NUM . ']'

    ']'  shift, and go to state 86


State 62

   32 GIDList: GIDList COMMA GID .

    $default  reduce using rule 32 (GIDList)


State 63

   51 expr: ID '[' . expr ']'

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 87


State 64

   52 expr: ID '(' . ')'

    ')'  shift, and go to state 88


State 65

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   43     | MUL expr .
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    $default  reduce using rule 43 (expr)


State 66

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   42     | AMPERSAND expr .
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    $default  reduce using rule 42 (expr)


State 67

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr
   50     | '(' expr . ')'

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    EQ     shift, and go to state 73
    NEQ    shift, and go to state 74
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78
    ')'    shift, and go to state 89


State 68

   37 expr: expr PLUS . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 90


State 69

   38 expr: expr MINUS . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 91


State 70

   39 expr: expr MUL . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 92


State 71

   40 expr: expr DIV . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 93


State 72

   41 expr: expr MOD . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 94


State 73

   44 expr: expr EQ . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 95


State 74

   45 expr: expr NEQ . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 96


State 75

   46 expr: expr LT . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 97


State 76

   47 expr: expr LTE . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 98


State 77

   48 expr: expr GT . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 99


State 78

   49 expr: expr GTE . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 100


State 79

   16 assignStmt: ID EQUAL expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    EQ     shift, and go to state 73
    NEQ    shift, and go to state 74
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78

    $default  reduce using rule 16 (assignStmt)


State 80

   17 assignStmt: ID '[' expr . ']' EQUAL expr
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    EQ     shift, and go to state 73
    NEQ    shift, and go to state 74
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78
    ']'    shift, and go to state 101


State 81

   18 ifStmt: IF expr THEN . Slist ELSE Slist ENDIF
   19       | IF expr THEN . Slist ENDIF

    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    ID          shift, and go to state 23
    BREAKPOINT  shift, and go to state 24
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    BREAK       shift, and go to state 28
    CONTINUE    shift, and go to state 29

    Slist           go to state 102
    Stmt            go to state 31
    inputStmt       go to state 32
    outputStmt      go to state 33
    assignStmt      go to state 34
    ifStmt          go to state 35
    whileStmt       go to state 36
    doWhileStmt     go to state 37
    breakStmt       go to state 38
    continueStmt    go to state 39
    breakPointStmt  go to state 40


State 82

   20 whileStmt: WHILE expr DO . Slist ENDWHILE

    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    ID          shift, and go to state 23
    BREAKPOINT  shift, and go to state 24
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    BREAK       shift, and go to state 28
    CONTINUE    shift, and go to state 29

    Slist           go to state 103
    Stmt            go to state 31
    inputStmt       go to state 32
    outputStmt      go to state 33
    assignStmt      go to state 34
    ifStmt          go to state 35
    whileStmt       go to state 36
    doWhileStmt     go to state 37
    breakStmt       go to state 38
    continueStmt    go to state 39
    breakPointStmt  go to state 40


State 83

   20 whileStmt: WHILE . expr DO Slist ENDWHILE
   21 doWhileStmt: DO Slist WHILE . expr ENDWHILE

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 104


State 84

    1 start: GDeclBlock BEGIN_ Slist END SEMICOLON .

    $default  reduce using rule 1 (start)


State 85

    3 Slist: Slist Stmt SEMICOLON .

    $default  reduce using rule 3 (Slist)


State 86

   35 GID: ID '[' NUM ']' .

    $default  reduce using rule 35 (GID)


State 87

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr
   51     | ID '[' expr . ']'

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    EQ     shift, and go to state 73
    NEQ    shift, and go to state 74
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78
    ']'    shift, and go to state 105


State 88

   52 expr: ID '(' ')' .

    $default  reduce using rule 52 (expr)


State 89

   50 expr: '(' expr ')' .

    $default  reduce using rule 50 (expr)


State 90

   37 expr: expr . PLUS expr
   37     | expr PLUS expr .
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 37 (expr)


State 91

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   38     | expr MINUS expr .
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    MUL  shift, and go to state 70
    DIV  shift, and go to state 71
    MOD  shift, and go to state 72

    $default  reduce using rule 38 (expr)


State 92

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   39     | expr MUL expr .
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    $default  reduce using rule 39 (expr)


State 93

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   40     | expr DIV expr .
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    $default  reduce using rule 40 (expr)


State 94

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   41     | expr MOD expr .
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    $default  reduce using rule 41 (expr)


State 95

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   44     | expr EQ expr .
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78

    $default  reduce using rule 44 (expr)


State 96

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   45     | expr NEQ expr .
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78

    $default  reduce using rule 45 (expr)


State 97

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   46     | expr LT expr .
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72

    $default  reduce using rule 46 (expr)


State 98

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   47     | expr LTE expr .
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72

    $default  reduce using rule 47 (expr)


State 99

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   48     | expr GT expr .
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72

    $default  reduce using rule 48 (expr)


State 100

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr
   49     | expr GTE expr .

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72

    $default  reduce using rule 49 (expr)


State 101

   17 assignStmt: ID '[' expr ']' . EQUAL expr

    EQUAL  shift, and go to state 106


State 102

    3 Slist: Slist . Stmt SEMICOLON
   18 ifStmt: IF expr THEN Slist . ELSE Slist ENDIF
   19       | IF expr THEN Slist . ENDIF

    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    ID          shift, and go to state 23
    BREAKPOINT  shift, and go to state 24
    IF          shift, and go to state 25
    ELSE        shift, and go to state 107
    ENDIF       shift, and go to state 108
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    BREAK       shift, and go to state 28
    CONTINUE    shift, and go to state 29

    Stmt            go to state 59
    inputStmt       go to state 32
    outputStmt      go to state 33
    assignStmt      go to state 34
    ifStmt          go to state 35
    whileStmt       go to state 36
    doWhileStmt     go to state 37
    breakStmt       go to state 38
    continueStmt    go to state 39
    breakPointStmt  go to state 40


State 103

    3 Slist: Slist . Stmt SEMICOLON
   20 whileStmt: WHILE expr DO Slist . ENDWHILE

    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    ID          shift, and go to state 23
    BREAKPOINT  shift, and go to state 24
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    ENDWHILE    shift, and go to state 109
    BREAK       shift, and go to state 28
    CONTINUE    shift, and go to state 29

    Stmt            go to state 59
    inputStmt       go to state 32
    outputStmt      go to state 33
    assignStmt      go to state 34
    ifStmt          go to state 35
    whileStmt       go to state 36
    doWhileStmt     go to state 37
    breakStmt       go to state 38
    continueStmt    go to state 39
    breakPointStmt  go to state 40


State 104

   20 whileStmt: WHILE expr . DO Slist ENDWHILE
   21 doWhileStmt: DO Slist WHILE expr . ENDWHILE
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    MUL       shift, and go to state 70
    DIV       shift, and go to state 71
    MOD       shift, and go to state 72
    DO        shift, and go to state 82
    ENDWHILE  shift, and go to state 110
    EQ        shift, and go to state 73
    NEQ       shift, and go to state 74
    LT        shift, and go to state 75
    LTE       shift, and go to state 76
    GT        shift, and go to state 77
    GTE       shift, and go to state 78


State 105

   51 expr: ID '[' expr ']' .

    $default  reduce using rule 51 (expr)


State 106

   17 assignStmt: ID '[' expr ']' EQUAL . expr

    ID         shift, and go to state 45
    NUM        shift, and go to state 46
    STRING     shift, and go to state 47
    MUL        shift, and go to state 48
    AMPERSAND  shift, and go to state 49
    '('        shift, and go to state 50

    expr  go to state 111


State 107

   18 ifStmt: IF expr THEN Slist ELSE . Slist ENDIF

    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    ID          shift, and go to state 23
    BREAKPOINT  shift, and go to state 24
    IF          shift, and go to state 25
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    BREAK       shift, and go to state 28
    CONTINUE    shift, and go to state 29

    Slist           go to state 112
    Stmt            go to state 31
    inputStmt       go to state 32
    outputStmt      go to state 33
    assignStmt      go to state 34
    ifStmt          go to state 35
    whileStmt       go to state 36
    doWhileStmt     go to state 37
    breakStmt       go to state 38
    continueStmt    go to state 39
    breakPointStmt  go to state 40


State 108

   19 ifStmt: IF expr THEN Slist ENDIF .

    $default  reduce using rule 19 (ifStmt)


State 109

   20 whileStmt: WHILE expr DO Slist ENDWHILE .

    $default  reduce using rule 20 (whileStmt)


State 110

   21 doWhileStmt: DO Slist WHILE expr ENDWHILE .

    $default  reduce using rule 21 (doWhileStmt)


State 111

   17 assignStmt: ID '[' expr ']' EQUAL expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MUL expr
   40     | expr . DIV expr
   41     | expr . MOD expr
   44     | expr . EQ expr
   45     | expr . NEQ expr
   46     | expr . LT expr
   47     | expr . LTE expr
   48     | expr . GT expr
   49     | expr . GTE expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MUL    shift, and go to state 70
    DIV    shift, and go to state 71
    MOD    shift, and go to state 72
    EQ     shift, and go to state 73
    NEQ    shift, and go to state 74
    LT     shift, and go to state 75
    LTE    shift, and go to state 76
    GT     shift, and go to state 77
    GTE    shift, and go to state 78

    $default  reduce using rule 17 (assignStmt)


State 112

    3 Slist: Slist . Stmt SEMICOLON
   18 ifStmt: IF expr THEN Slist ELSE Slist . ENDIF

    READ        shift, and go to state 21
    WRITE       shift, and go to state 22
    ID          shift, and go to state 23
    BREAKPOINT  shift, and go to state 24
    IF          shift, and go to state 25
    ENDIF       shift, and go to state 113
    WHILE       shift, and go to state 26
    DO          shift, and go to state 27
    BREAK       shift, and go to state 28
    CONTINUE    shift, and go to state 29

    Stmt            go to state 59
    inputStmt       go to state 32
    outputStmt      go to state 33
    assignStmt      go to state 34
    ifStmt          go to state 35
    whileStmt       go to state 36
    doWhileStmt     go to state 37
    breakStmt       go to state 38
    continueStmt    go to state 39
    breakPointStmt  go to state 40


State 113

   18 ifStmt: IF expr THEN Slist ELSE Slist ENDIF .

    $default  reduce using rule 18 (ifStmt)
